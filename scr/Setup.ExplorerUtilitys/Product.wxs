<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <!--  
    This Setup was build by using the following tutorial: http://blog.schelian.de/2011/11/alles-wix-oder-was-windows-installer-xml-toolset-fuer-dummies/
    <?define Manufactor = "Hans-Peter Schelian"?>
        Anstelle den Manufactor an mehreren Stellen anzugeben weise ich hier lieber einer Variablen den Wert zu
        und verwende im weiteren Verlauf einfach die Variable
  -->
  <!--  <?define UpgradeGuid = "{3B563A68-99BC-4528-9356-295ADB67909A}"?>
        Ganz Wichtig, die Guid für den UpgradeCode darf nach der ersten Installation nicht mehr geändert werden
        aus diesem Grund weise ich diese Guid einer Variablen zu die ich dann im weiteren Verlauf im Bereich
        <Product UpgradeCode="$(var.UpgradeGuid)" /> und  im Bereich <Upgrade Id="$(var.UpgradeGuid)" anstelle
        der Eingabe der eigentlichen Guid verwenden kann.
  -->

  <!-- Hier nun alle Defines die durch den Präprozessor aufgelöst werden -->
  <?define Manufactor = "Daniel Bedarf"?>
  <?define UpgradeGuid = "{fe98ef31-58e7-4783-9a98-1892433c3d2f}"?>

  <!-- * = new id for each build -->
  <Product
   Id="*"
   Name="Github Explorer Utilitys"
   Language="1033"
   Version="0.0.0.1"
   Manufacturer="$(var.Manufactor)"
   UpgradeCode="$(var.UpgradeGuid)">

    <Package
     InstallerVersion="200"
     Compressed="yes"
     Description="Installiert die Stream - Anzeige"
     Manufacturer="$(var.Manufactor)"
     Comments="TEST Comment"
    />

    <Media
    Id="1"
    Cabinet="media1.cab"
    EmbedCab="yes"
  />
    <Property Id="ARPHELPTELEPHONE" Value="000" />
    <Property Id="ARPHELPLINK" Value="http://github,.com" />
    <Property Id="ARPCONTACT" Value="blndev" />
    <Property Id="ARPCOMMENTS" Value="Explorer Utilitys" />
    <Property Id="ARPURLINFOABOUT" Value="http://github.com" />

    <!--<MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />-->

    <!-- Erklärungen zum Bereich <Upgrade>
        Upgrade Id="$(var.UpgradeGuid)"> hier Zuweisung durch Präprozessor Variable, siehe auch Hinweise
          zu define UpgradeGuid
 
        <UpgradeVersion Minimum="!(bind.FileVersion.MyApplicationFile)" - Hier wird festgestellt ob
          bereits ein neueres Produkt (Neuere Version) installiert ist.
 
        <UpgradeVersion Minimum="0.1.0.0" - Prüfung ob bereits eine frühere Version installiert ist
 
        <UpgradeVersion Minimum="1.0.0.0" Maximum="99.0.0.0" - Ist das Prpdukt in welcher Versio auch immer
            bereits auf dem Rechner installiert, dann setzt die internet Variable PREVIOUSVERSIONSINSTALLED,
            dadurch wird verhindert, dass selbst dann wenn man eine Version die nicht als Upgrade gilt
            (nur im vierten Bereich) der Versionsnummer geändert ist, nicht dazu führt, dass es zu doppelten
            Einträgen im Add/Remove Programms kommt.
    -->
    <Upgrade Id="$(var.UpgradeGuid)">
      <UpgradeVersion Minimum="0.0.0.1"
                      IncludeMinimum="no"
                      OnlyDetect="yes"
                      Language="1033"
                      Property="NEWPRODUCTFOUND" />
      <!--<UpgradeVersion Minimum="0.0.0.0"
                      IncludeMinimum="yes"
                      Maximum="0.0.0.3"
                      IncludeMaximum="no"
                      Language="1033"
                      Property="UPGRADEFOUND" />-->
      <UpgradeVersion Minimum="0.0.0.1" Maximum="99.0.0.0"
         Property="PREVIOUSVERSIONSINSTALLED"
         IncludeMinimum="yes" IncludeMaximum="no" />
    </Upgrade>


    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFilesFolder">
        <Directory Id="CompanyFolder" Name="Github OSS" >
          <Directory Id="INSTALLFOLDER" Name="ExplorerUtilitys" >
            <Component Id="ProductComponent" Guid="{B7504CB3-8774-45EC-A3EA-62A74E363696}">
              <File Id="ShellExtension" Name="$(var.DLL.ExplorerUtilitys.TargetFileName)" Source="$(var.DLL.ExplorerUtilitys.TargetPath)" KeyPath="yes">
              </File>
            </Component>
           
            <Component Id="readme.txt" Guid="{50DCA7B7-0E92-4BE1-9462-77D4FAF9C959}">
              <File Id="readme.txt" Name="!ReadMe.txt" Source="$(var.DLL.ExplorerUtilitys.ProjectDir)ReadMe.txt" KeyPath="yes" />
            </Component>
           
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <Feature Id="ProductFeature" Title="ShellExtensions" Level="1">
      <ComponentRef Id="ProductComponent" />
      <ComponentRef Id="readme.txt" />
    </Feature>
    
    
    <!-- Keinen Downgrade zulassen -->
    <CustomAction Id="PreventDowngrading" Error="there is aalready a new version installed." />

    <!-- Nun noch die auszuführende Reihenfolg angeben
        siehe auch http://wix.sourceforge.net/manual-wix3/wix_xsd_installexecutesequence.htm
    -->
    <InstallExecuteSequence>
      <Custom Action="PreventDowngrading"
              After="FindRelatedProducts">NEWPRODUCTFOUND</Custom>
      <RemoveExistingProducts After="InstallFinalize" />
    </InstallExecuteSequence>

    <!-- Wenn ein neueres Produkt gerunden wurde, soll das auch in der UI ausgegeben werden
        siehe auch http://wix.sourceforge.net/manual-wix3/wix_xsd_installuisequence.htm
    -->
    <InstallUISequence>
      <Custom Action="PreventDowngrading"
              After="FindRelatedProducts">NEWPRODUCTFOUND</Custom>
    </InstallUISequence>

    <!-- So kann man eine eigene Lizenzmeldung ausgeben -->
    <!--<WixVariable Id='WixUILicenseRtf' Overridable='yes' Value='$(var.WixDemoProjekt.ProjectDir)Lizenzbestimmungen.rtf'/>-->

    <UIRef Id="WixUI_Minimal" />
    <UIRef Id="WixUI_ErrorProgressText" />
    
  </Product>
</Wix>